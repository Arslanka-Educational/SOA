openapi: 3.0.0
info:
  title: Navigator API
  version: 0.0.1
  description: RESTful API для навигации по маршрутрам

servers:
  - url: https://localhost:8080/navigator
    x-environment: local
  - url: https://89.169.147.9:8081/navigator
    x-environment: prod
    
paths:
  /navigator/locations:
    get:
      summary: Получить список локаций
      tags:
        - Locations
      operationId: getLocations
      parameters:
        - name: limit
          in: query
          description: Количество элементов в выдаче
          required: false
          schema:
            type: integer
            minimum: 1
            example: 10
        - name: offset
          in: query
          description: Сдвиг по элементам от начала
          required: false
          schema:
            type: integer
            minimum: 1
            example: 10
      responses:
        '200':
          description: Локация
          content:
            application/json:
              schema:
                $ref: '../route-management-service-api/client-models.yaml#/components/schemas/LocationResponse'
        '400':
          $ref: '../../common/responses.yaml#/components/responses/400'
        '404':
          $ref: '../../common/responses.yaml#/components/responses/404'
        '500':
          $ref: '../../common/responses.yaml#/components/responses/500'
        '503':
          $ref: '../../common/responses.yaml#/components/responses/503'

  /navigator/route/{id-from}/{id-to}/{shortest}:
      get:
        summary: Найти самый короткий (или длинный) маршрут между указанными локациями
        operationId: getRoute
        tags:
          - Navigator
        parameters:
          - name: id-from
            in: path
            description: id локации откуда
            required: true
            schema:
              type: integer
              format: int64
              minimum: 1
              example: 10
          - name: id-to
            in: path
            description: id локации куда
            required: true
            schema:
              type: integer
              format: int64
              minimum: 1
              example: 10
          - name: shortest
            in: path
            description: Если `true`, берем самый короткий маршрут, иначе самый длинный
            required: true
            schema:
              type: boolean
        responses:
          '200':
            description: Успешный ответ с маршрутом
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Route'
          '204':
            $ref: '../../common/responses.yaml#/components/responses/204'
          '400':
            $ref: '../../common/responses.yaml#/components/responses/400'
          '404':
            $ref: '../../common/responses.yaml#/components/responses/404'
          '500':
            $ref: '../../common/responses.yaml#/components/responses/500'
          '503':
            $ref: '../../common/responses.yaml#/components/responses/503'
  
  /navigator/route/add/{id-from}/{id-to}/{distance}:
    post:
      summary: Добавить новый маршрут
      tags:
        - Navigator
      operationId: addRoute
      parameters:
        - name: id-from
          in: path
          description: id локации откуда
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            example: 10
        - name: id-to
          in: path
          description: id локации куда
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            example: 10
        - name: distance
          in: path
          description: Дистанция маршрута
          required: true
          schema:
            type: number
            format: double
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteAddRequest'
      responses:
        '201':
          description: Маршрут успешно создан
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Route'
        '400':
          $ref: '../../common/responses.yaml#/components/responses/400'
        '404':
          $ref: '../../common/responses.yaml#/components/responses/404'
        '500':
          $ref: '../../common/responses.yaml#/components/responses/500'
        '503':
          $ref: '../../common/responses.yaml#/components/responses/503'

components:
  schemas:
    Route:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор маршрута
          readOnly: true
          minimum: 1
          format: int64
          nullable: false
        name:
          type: string
          description: Название маршрута
          minLength: 1
          nullable: false
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          readOnly: true
          nullable: false
        from:
          $ref: '#/components/schemas/Location'
        to:
          $ref: '#/components/schemas/Location'
        distance:
          $ref: '#/components/schemas/Distance'
      required:
        - id
        - name
        - coordinates
        - creationDate

    Coordinates:
      type: object
      nullable: true
      properties:
        x:
          type: integer
          format: int32
          nullable: false
        y:
          type: number
          maximum: 610
          format: double
          nullable: false
      required:
        - x
        - y

    Location:
      type: object
      nullable: true
      properties:
        x:
          type: integer
          format: int32
          nullable: false
        y:
          type: integer
          format: int32
          nullable: true
        z:
          type: integer
          format: int64
          nullable: false
        name:
          type: string
          nullable: true
          maxLength: 517
      required:
        - x
        - z

    Distance:
      description: Дистанция до маршрута
      type: number
      format: double
      minimum: 1
      nullable: false

    RouteAddRequest:
      type: object
      properties:
        name:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
      required:
        - name